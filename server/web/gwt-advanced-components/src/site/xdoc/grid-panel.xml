<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Grid Panel, Pager and Grid Toolbar</title>
    </properties>
    <body>
        <section name="Description and Features List">
            <div class="imageRight">
                <p>
                    <img src="images/grid-panel.gif" border="0" alt="Customizable grid controls simplify grids management and provide reliable UI"/>
                </p>
                <p>
                    <i>Customizable grid controls simplify grids management and provide reliable UI</i>
                </p>
            </div>
            <div class="textLeft">
                <p>
                    Grid Panel, Pager, and Grid Toolbar are additional GWT widgets which simplify grids management.
                    You can use the grids without these components and / or develop your own prototypes but the best
                    practise is to apply them the following purposes:

                    <ul>
                        <li>Grid Panel. It's a layout widget for the grids. It also creates new grids, pagers and toolbars and handle events</li>
                        <li>Pager. It is a control widget that displays a list of availbale pages and allows switching grid views between them</li>
                        <li>Grid Toolbar is a component which displays grid control buttons</li>
                    </ul>
                </p>
                <p>
                    Note that the next features currently supported:

                    <ul>
                        <li>grid paging controls</li>
                        <li>grid rows management (saving, adding, removing, etc)</li>
                        <li>centralized grid event (mouse na dkeyboard) handling</li>
                        <li>factory methods to create new grid instances</li>
                        <li>facade methods to control the nested grid</li>
                        <li>centralized columns resizing</li>
                    </ul>

                    The last feature means that you don't have to invoke the <i>SimpleGrid.resize()</i> mathod manually
                    Grid Panel will do for you every time when <i>onLoad</i> event sent.
                </p>
            </div>
        </section>
        <div class="googleAds"><google-ads-horizontal-banner/></div>
        <section name="Sample">
            <p>
                The next sample shows how to create a new Grid Panel and control Pager and Grid Toolbar displaying.
            </p>
<source>
<pre style="line-height: 110%;font-family:monospace;background-color:#ffffff"><span style="background-color:#ffffff;">GridPanel panel = </span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">new</span><span style="background-color:#ffffff;"> GridPanel();

panel.setTopPagerVisible(</span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">false</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// switch off the top pager
</span><span style="background-color:#ffffff;">panel.setBottomPagerVisible(</span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">true</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// switch on the bottom pager
</span><span style="background-color:#ffffff;">panel.setTopToolbarVisible(</span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">false</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// switch off the top toolbar
</span><span style="background-color:#ffffff;">panel.setBottomToolbarVisible(</span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">true</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// switch on the bottom toolbar

</span><span style="background-color:#ffffff;">panel.setInvisibleColumn(</span><span style="color:#0000ff;background-color:#ffffff;">0</span><span style="background-color:#ffffff;">, </span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">true</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// set the first column invisible
</span><span style="background-color:#ffffff;">panel.setSortableColumn(</span><span style="color:#0000ff;background-color:#ffffff;">1</span><span style="background-color:#ffffff;">, </span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">false</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// make the second column non-soirtable
</span><span style="background-color:#ffffff;">panel.setReadonlyColumn(</span><span style="color:#0000ff;background-color:#ffffff;">2</span><span style="background-color:#ffffff;">, </span><span style="color:#000080;background-color:#ffffff;font-weight:bold;">true</span><span style="background-color:#ffffff;">); </span><span style="color:#808080;background-color:#ffffff;font-style:italic;">// make the third column read only</span></pre>
</source>
            <p>
                Some methods of the Grid Panel actually delegate invocations to the nested grid methods. 
            </p>
        </section>
        <div class="googleAds"><google-ads-horizontal-banner/></div>
    </body>
</document>