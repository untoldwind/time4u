<?xml version="1.0" encoding="UTF-8"?>
<faqs title="FAQ - Combo Box Questions">
    <part id="Combo Box Questions">
        <faq id="what_is_combo_box">
            <question>What is ComboBox? Why do I need it?</question>
            <answer>
                <p>
                    ComboBox is a GWT widget that has rather similar functionality with standard ListBox. The main differences are:

                    <ul>
                        <li>It 's designed to support data models as well as the grids.</li>
                        <li>You can apply any CSS to this widget without browser specific limitations.</li>
                        <li>It doesn't support multiple selections.</li>
                        <li>It does support custom text entering.</li>
                    </ul>
                </p>
                <p>
                    Taking into account features and restrictions listed above you can make decision whether you need
                    this component.
                </p>
            </answer>
        </faq>
        <faq id="how_to_use_combo">
            <question>How to use combo boxes?</question>
            <answer>
                <p>
                    It's very easy. Consider the sample below.
<pre style="padding: 4px; line-height: 110%; font-family: monospace; background-color: rgb(255, 255, 255);">
<span style="color: rgb(128, 128, 128); font-style: italic; background-color: rgb(255, 255, 255);">//create and fill combo box model</span>

<span style="background-color: rgb(255, 255, 255);">ComboBoxDataModel model =</span><span style="font-weight: bold; color: rgb(0, 0, 128); background-color: rgb(255, 255, 255);"> new</span><span style="background-color: rgb(255, 255, 255);"> ComboBoxDataModel();
</span><span style="font-weight: bold; color: rgb(0, 0, 128); background-color: rgb(255, 255, 255);">for</span><span style="background-color: rgb(255, 255, 255);"> (</span><span style="font-weight: bold; color: rgb(0, 0, 128); background-color: rgb(255, 255, 255);">int</span><span style="background-color: rgb(255, 255, 255);"> i = </span><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 255);">0</span><span style="background-color: rgb(255, 255, 255);">; i &lt; </span><span style="color: rgb(0, 0, 255); background-color: rgb(255, 255, 255);">10</span><span style="background-color: rgb(255, 255, 255);">; i++)
    </span><span>model.add(String.</span><span style="font-style: italic; background-color: rgb(255, 255, 255);">valueOf(</span><span style="background-color: rgb(255, 255, 255);">i), </span><span style="font-weight: bold; color: rgb(0, 128, 0); background-color: rgb(255, 255, 255);">"Option "</span><span style="background-color: rgb(255, 255, 255);"> + i);
ComboBox comboBox = </span><span style="font-weight: bold; color: rgb(0, 0, 128); background-color: rgb(255, 255, 255);">new</span><span style="background-color: rgb(255, 255, 255);"> ComboBox();</span><span style="color: rgb(128, 128, 128); font-style: italic; background-color: rgb(255, 255, 255);">//create
</span><span style="background-color: rgb(255, 255, 255);">comboBox.setModel(model); </span><span style="color: rgb(128, 128, 128); font-style: italic; background-color: rgb(255, 255, 255);">//apply the model
</span><span style="background-color: rgb(255, 255, 255);">comboBox.display(); </span><span style="color: rgb(128, 128, 128); font-style: italic; background-color: rgb(255, 255, 255);">//display the widget</span></pre>
                </p>
                <p>
                    Note that you should set the combo box data model before you display it. Otherwise it won't work
                    properly. On the other hand you can dynamically set a new instance of the model and invoke the
                    <i>display()</i> method again and again.
                </p>
            </answer>
        </faq>
        <faq id="is_it_possible_to_create_combo_cell">
            <question>Is it possible to create a grid cell that contains a ComboBox?</question>
            <answer>
                <p>
                    Yes, it's possible. Just use the <i>org.gwt.advanced.client.ui.widget.cell.ComboBoxCell</i>
                    when you create a new instance of the grid. Some details about it can also find in this
                    <a href="editable-grid-faq.html#what_is_editable_grid">topic</a>.
                </p>
                <div class="googleAds"><google-ads-horizontal-banner/></div>
            </answer>
        </faq>
        <faq id="does_support_keyboard">
            <question>Does the ComboBox allow choosing an item using a keyboard?</question>
            <answer>
                <p>
                    Yes, keyboard events handling is supported since the 1.4.8 version. The following table contains
                    shortcuts and descriptions for each action you can do with a keyboard.
                </p>
                <table>
                    <thead>
                        <tr>
                            <th>Shortcut</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Enter</td>
                            <td>Opens a drop-down list if it's closed, otherwise chooses a currently highlight item in the list</td>
                        </tr>
                        <tr>
                            <td>Esc</td>
                            <td>Closes opened drop-down list without choosing an item</td>
                        </tr>
                        <tr>
                            <td>Arrow Up</td>
                            <td>Moves the list cursor up</td>
                        </tr>
                        <tr>
                            <td>Arrow Down</td>
                            <td>Moves the list cursor down</td>
                        </tr>
                        <tr>
                            <td>Tab</td>
                            <td>Moves focus to the next focusable element on the screen</td>
                        </tr>
                        <tr>
                            <td>Alt-Tab</td>
                            <td>Moves focus to the previous focusable element on the screen</td>
                        </tr>
                    </tbody>
                </table>
                <div class="googleAds"><google-ads-horizontal-banner/></div>
            </answer>
        </faq>
    </part>
</faqs>